
namespace stuff;

module specialstuff( version )
  : contracted
    dependencies( [
      lib.gunk( 2.1.1 )
    ] )
    documented
    paradigms( [
      algebraic,
      annotational,
      functional,
      graph_oriented,
      logic,
      object_oriented,
      structural,
      tree_oriented
    ] )
    tested
    type_checked
begin

  function doStuff( x , y ) begin
    return x + y;
  end

  function factorial( n : Integer32 )
    : "The factorial function is defined in recursive fragments."
      recursive
    return n * factorial( n - 1 );

  function factorial( 0 )
    : "The base case"
    return 1;

end


module specialstuff( 1.1.0 ) begin

  alias extra = lib.gunk( 2.1.1 ).extra;

  function doStuff( x , y ) begin
    return x + y + extra( x, y );
  end

end


module specialstuff( 2.0.0 ) begin

  function doMore( a ) begin
    return a^2;
  end

end